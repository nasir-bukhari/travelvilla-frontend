[{"F:\\Travel Villa\\travelvilla-frontend\\src\\index.js":"1","F:\\Travel Villa\\travelvilla-frontend\\src\\App.js":"2","F:\\Travel Villa\\travelvilla-frontend\\src\\geoapi.js":"3","F:\\Travel Villa\\travelvilla-frontend\\src\\store.js":"4","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\SignUp.js":"5","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\Login.js":"6","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\Contact.js":"7","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\ResetPasswordConfirm.js":"8","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\ResetPassword.js":"9","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\Activate.js":"10","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\About.js":"11","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\LandingPage\\LandingPage.js":"12","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\JourneyPlan\\JourneyPlan.js":"13","F:\\Travel Villa\\travelvilla-frontend\\src\\theme.js":"14","F:\\Travel Villa\\travelvilla-frontend\\src\\hoc\\Layout.js":"15","F:\\Travel Villa\\travelvilla-frontend\\src\\actions\\auth.js":"16","F:\\Travel Villa\\travelvilla-frontend\\src\\components\\AppBar\\AppBar.js":"17","F:\\Travel Villa\\travelvilla-frontend\\src\\components\\Footer\\Footer.js":"18","F:\\Travel Villa\\travelvilla-frontend\\src\\components\\MapContainer\\MapContainer.js":"19","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\LandingPage\\ExploreSection\\ExploreSection.js":"20","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\LandingPage\\IdeasSection\\IdeasSection.js":"21","F:\\Travel Villa\\travelvilla-frontend\\src\\components\\Header\\Header.js":"22","F:\\Travel Villa\\travelvilla-frontend\\src\\reducers\\index.js":"23","F:\\Travel Villa\\travelvilla-frontend\\src\\actions\\types.js":"24","F:\\Travel Villa\\travelvilla-frontend\\src\\actions\\map.js":"25","F:\\Travel Villa\\travelvilla-frontend\\src\\reducers\\auth.js":"26","F:\\Travel Villa\\travelvilla-frontend\\src\\reducers\\map.js":"27"},{"size":151,"mtime":1621006927579,"results":"28","hashOfConfig":"29"},{"size":1522,"mtime":1621006927401,"results":"30","hashOfConfig":"29"},{"size":1983,"mtime":1621006927579,"results":"31","hashOfConfig":"29"},{"size":401,"mtime":1622447454963,"results":"32","hashOfConfig":"29"},{"size":6584,"mtime":1621006927592,"results":"33","hashOfConfig":"29"},{"size":5553,"mtime":1621006927589,"results":"34","hashOfConfig":"29"},{"size":4363,"mtime":1621006927586,"results":"35","hashOfConfig":"29"},{"size":3699,"mtime":1621006927591,"results":"36","hashOfConfig":"29"},{"size":3117,"mtime":1621006927591,"results":"37","hashOfConfig":"29"},{"size":2069,"mtime":1621006927585,"results":"38","hashOfConfig":"29"},{"size":2954,"mtime":1621006927583,"results":"39","hashOfConfig":"29"},{"size":490,"mtime":1621006927589,"results":"40","hashOfConfig":"29"},{"size":10740,"mtime":1622747424583,"results":"41","hashOfConfig":"29"},{"size":838,"mtime":1621006927583,"results":"42","hashOfConfig":"29"},{"size":1152,"mtime":1621006927579,"results":"43","hashOfConfig":"29"},{"size":5925,"mtime":1621006927403,"results":"44","hashOfConfig":"29"},{"size":2438,"mtime":1621006927576,"results":"45","hashOfConfig":"29"},{"size":2903,"mtime":1621006927577,"results":"46","hashOfConfig":"29"},{"size":3626,"mtime":1622571783537,"results":"47","hashOfConfig":"29"},{"size":1784,"mtime":1621006927587,"results":"48","hashOfConfig":"29"},{"size":4209,"mtime":1621006927588,"results":"49","hashOfConfig":"29"},{"size":9055,"mtime":1622747812290,"results":"50","hashOfConfig":"29"},{"size":155,"mtime":1622446758033,"results":"51","hashOfConfig":"29"},{"size":1088,"mtime":1622449564340,"results":"52","hashOfConfig":"29"},{"size":858,"mtime":1622449599714,"results":"53","hashOfConfig":"29"},{"size":1919,"mtime":1621006927582,"results":"54","hashOfConfig":"29"},{"size":970,"mtime":1622449572842,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1jlduhb",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},"F:\\Travel Villa\\travelvilla-frontend\\src\\index.js",[],["121","122"],"F:\\Travel Villa\\travelvilla-frontend\\src\\App.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\geoapi.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\store.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\views\\SignUp.js",["123","124"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { fab, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { signup } from \"../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ButtonAppBar from '../components/AppBar/AppBar';\r\nimport Layout from \"../hoc/Layout\";\r\nfunction Copyright() {\r\n  return (\r\n    \r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Travelvilla\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  google: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignUp = ({ signup, isAuthenticated }) => {\r\n  const classes = useStyles();\r\n\r\n  const [formData, setFormData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n  });\r\n\r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n  const { first_name, last_name, email, password, re_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password === re_password) {\r\n      signup({ first_name, last_name, email, password, re_password });\r\n      setAccountCreated(true);\r\n    }\r\n  };\r\n\r\n  const continueWithGoogle = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=http://localhost:8000`\r\n      );\r\n\r\n      window.location.replace(res.data.authorization_url);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) return <Redirect to=\"/\" />;\r\n  if (accountCreated) return <Redirect to=\"login\" />;\r\n\r\n  return (\r\n    <Layout>\r\n    <ButtonAppBar color=\"primary\" backgroundColor=\"rgba(39, 99, 42, 1)\"></ButtonAppBar>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          method=\"post\"\r\n          onSubmit={(e) => onSubmit(e)}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"first_name\"\r\n                label=\"First Name\"\r\n                name=\"first_name\"\r\n                value={first_name}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"last_name\"\r\n                label=\"Last Name\"\r\n                name=\"last_name\"\r\n                value={last_name}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => onChange(e)}\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                value={password}\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"re_password\"\r\n                value={re_password}\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"re_password\"\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<FontAwesomeIcon icon={[\"fab\", \"google\"]} />}\r\n          className={classes.google}\r\n          onClick={continueWithGoogle}\r\n        >\r\n          Continue With Google\r\n        </Button>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    </Layout>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(SignUp);\r\n","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\Login.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\views\\Contact.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\views\\ResetPasswordConfirm.js",["125"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport VpnKeySharpIcon from \"@material-ui/icons/VpnKeySharp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { theme } from \"../theme\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Travel Villa\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst ResetPasswordConfirm = ({match, reset_password_confirm}) => {\r\n  const classes = useStyles();\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n  });\r\n\r\n  const { new_password, re_new_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n\r\n    reset_password_confirm(uid, token, new_password, re_new_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <VpnKeySharpIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Set New Password\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e) => onSubmit(e)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"new_password\"\r\n            label=\"New Password\"\r\n            name=\"new_password\"\r\n            type = \"password\"\r\n            autoFocus\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"re_new_password\"\r\n            label=\"Confirm New Password\"\r\n            name=\"re_new_password\"\r\n            type = \"password\"\r\n            autoFocus\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\ResetPassword.js",["126"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport VpnKeySharpIcon from \"@material-ui/icons/VpnKeySharp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password } from \"../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { theme } from \"../theme\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Travel Villa\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst ResetPassword = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [requestSent, setRequestSent] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const { email } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.reset_password(email);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <VpnKeySharpIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Request Password Reset\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={(e) => onSubmit(e)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\Activate.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\views\\About.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\views\\LandingPage\\LandingPage.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\views\\JourneyPlan\\JourneyPlan.js",["127","128","129"],"import React,{useEffect,useState} from \"react\";\r\nimport ButtonAppBar from '../../components/AppBar/AppBar';\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport Layout from \"../../hoc/Layout\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\nimport MapContainer from '../../components/MapContainer/MapContainer';\r\nimport { useSelector} from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    textAlign: 'left',\r\n    borderRadius: 0,\r\n    padding: '20px',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  spacingLeft: {\r\n    marginLeft: '10px'\r\n  },\r\n  spacingTop: {\r\n    marginTop: '20px'\r\n  },\r\n  directionDiv: {\r\n    padding: '10px 30px 10px 10px',\r\n    width: '80%'\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function JourneyPlan() {\r\n\r\n\r\n  const state = useSelector(state=>state.map);\r\n  const classes = useStyles();\r\n  const [hour,setHour] = useState('');\r\n  const [time,setTime] = useState('');\r\n  const [date,setDate] = useState('');\r\n  const [fromName,setFromName] = useState('');\r\n  const [toName,setToName] = useState('');\r\n  const [routes,setRoutes] = useState(null);\r\n  const [startingTime,setStartingTime] = useState('');\r\n  const [endingTime,setEndingTime] = useState('');\r\n  const [origin,setOrigin] = useState('');\r\n  const [distance,setDistance] = useState(0);\r\n  const [travelTime,setTravelTime] = useState(0);\r\n  const [arrivalTime,setArrivalTime] = useState(0);\r\n\r\n  let totalTime = 0;\r\n\r\n\r\n  // console.log(state)\r\n  useEffect(()=>{\r\n\r\n    const {route,trip} = state;\r\n\r\n    const {fromName,toName,time,date} = trip;\r\n\r\n      setFromName(fromName);\r\n      setToName(toName);\r\n      setTime(time);\r\n\r\n      const hour = time.split(':')[0] > 12 ? 'pm' : 'am';\r\n      setHour(hour);\r\n\r\n      const DATE = String(date).split('T')[0];\r\n      setDate(DATE);\r\n\r\n\r\n      if(route.features.length > 1){\r\n\r\n        setRoutes(route);\r\n\r\n        route.features.map((route)=>{\r\n\r\n          const {travl_time} = route.properties;\r\n\r\n          totalTime = totalTime + Number(travl_time);\r\n\r\n        if(totalTime < 60){\r\n\r\n          const minuteSum = Number(time.split(':')[1]) + Math.round(totalTime)\r\n\r\n          totalTime = time.split(':')[0] + ':' + minuteSum;\r\n\r\n          setArrivalTime(totalTime);\r\n\r\n        }\r\n\r\n\r\n      })\r\n\r\n  }else if(route.features.length == 1){\r\n\r\n    const {ending_t,starting_t,travl_time,distance,origin} = route.features[0].properties;\r\n\r\n    totalTime = travl_time;\r\n\r\n    setOrigin(origin);\r\n    setStartingTime(starting_t);\r\n    setEndingTime(ending_t);\r\n    setDistance(Math.round(distance * 1000)/1000);\r\n    setTravelTime(Math.round(Number(travl_time)));\r\n\r\n\r\n    if(totalTime < 60){\r\n\r\n      const minuteSum = Number(time.split(':')[1]) + Math.round(totalTime)\r\n\r\n      totalTime = time.split(':')[0] + ':' + minuteSum;\r\n\r\n      setArrivalTime(totalTime);\r\n\r\n\r\n    }\r\n\r\n\r\n   }\r\n\r\n},[state,routes]);\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <Layout>\r\n      <ButtonAppBar color=\"primary\" backgroundColor=\"rgba(39, 99, 42, 1)\"></ButtonAppBar>\r\n      <Container >\r\n      <Typography variant=\"h3\" component=\"h2\" style={{marginTop: '20px'}}>\r\n        Journey Results\r\n      </Typography>\r\n      <Box component=\"span\" m={1}>\r\n      <Grid container spacing={3}>\r\n        <Grid item md={6} xs={12}>\r\n          <Paper className={classes.paper}>\r\n          <Typography variant=\"h6\" component=\"span\" >\r\n            From:\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" component=\"span\" className={classes.spacingLeft}>\r\n            {fromName}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography variant=\"h6\" component=\"span\" >\r\n            To:\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" component=\"span\" className={classes.spacingLeft}>\r\n          {toName}\r\n          </Typography>\r\n          <br></br>\r\n          <Typography variant=\"h6\" component=\"span\" >\r\n            Leaving Date/Time:\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" component=\"span\" className={classes.spacingLeft}>\r\n            {date} / {time } {hour}\r\n          </Typography>\r\n          <br></br>\r\n          <br></br>\r\n          <Button variant=\"contained\" color=\"secondary\" href='/'>\r\n              Edit Journey\r\n          </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={6} xs={12}>\r\n          <Paper className={classes.paper}>\r\n          <Typography variant=\"h6\" component=\"div\" >\r\n            Travel Preferences and Accessiblity\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" component=\"div\">\r\n            Showing the fastest routes Using all transport modes Max walk time 60 mins\r\n          </Typography>\r\n          <br></br>\r\n\r\n          <Button variant=\"contained\" color=\"secondary\" className={classes.spacingTop}>\r\n              Edit Preferences\r\n          </Button>\r\n          </Paper>\r\n        </Grid>\r\n\r\n      </Grid>\r\n      </Box>\r\n      <br></br>\r\n      <br></br>\r\n      {/* <Typography variant=\"h6\" component=\"span\" >\r\n            THE FOLLOWING JOURNEYS DEPART ON {state.trip.date} By Public Transport\r\n      </Typography>\r\n       */}\r\n      <Accordion className={classes.spacingTop} >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Route 1</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <Container maxWidth=\"lg\" style={{backgroundColor: 'lightgrey', padding: '10px'}}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Paper className={classes.paper}>\r\n                <Box component=\"div\">\r\n                <Typography className={classes.heading} variant='h6' component=\"span\">Leave At: </Typography>\r\n                <Typography className={classes.heading}  component=\"span\">{time} {hour}</Typography>\r\n                <br></br>\r\n                <Typography className={classes.heading}  variant='h6' component=\"span\">Arrive At: </Typography>\r\n                <Typography className={classes.heading}  component=\"span\">{arrivalTime} {hour} </Typography>\r\n                </Box>\r\n                <br></br>\r\n\r\n              </Paper>\r\n              <br></br>\r\n\r\n              {routes ? routes.features.map((route,id)=>{\r\n\r\n                    const {ending_t,starting_t,travl_time,distance,origin,} = route.properties;\r\n\r\n                    return(\r\n\r\n                      <Paper className={classes.paper} key={id}>\r\n\r\n                      <Box component=\"div\" >\r\n                      <TrainIcon></TrainIcon>\r\n                      <span className={classes.directionDiv}>\r\n\r\n                        <Typography className={classes.heading} variant='h6' component=\"span\">\r\n                          Board Ride-On Bus {Math.round(Number(travl_time))} minutes\r\n                          <br></br>\r\n                          Departs from: {origin} <br></br>\r\n                          Open: {starting_t} <br></br>\r\n                          Close: {ending_t}<br></br>\r\n                          Distance: {Math.round(distance * 1000)/1000} M<br></br>\r\n\r\n                        </Typography>\r\n\r\n                      </span>\r\n                        <hr></hr>\r\n\r\n                      </Box>\r\n                    </Paper>\r\n                    )\r\n\r\n                   })\r\n\r\n                  :\r\n\r\n                      <Paper className={classes.paper}>\r\n\r\n                      <Box component=\"div\" >\r\n                      <TrainIcon></TrainIcon>\r\n                      <span className={classes.directionDiv}>\r\n\r\n                        <Typography className={classes.heading} variant='h6' component=\"span\">\r\n                          Board Ride-On Bus {travelTime} minutes\r\n                          <br></br>\r\n                          Departs from: {origin} <br></br>\r\n                          Open: {startingTime} <br></br>\r\n                          Close : {endingTime}<br></br>\r\n                          Distance: {distance} KM<br></br>\r\n\r\n                        </Typography>\r\n\r\n                      </span>\r\n                        <hr></hr>\r\n\r\n                      </Box>\r\n                    </Paper>\r\n\r\n\r\n                }\r\n\r\n              <br></br>\r\n\r\n\r\n\r\n              {/* <Paper className={classes.paper}>\r\n               \r\n                <Box component=\"div\" >\r\n                <DirectionsWalkIcon></DirectionsWalkIcon>\r\n                <span className={classes.directionDiv}>\r\n                  \r\n                  <Typography className={classes.heading} variant='h6' component=\"span\">\r\n                    Walk - 3 min - 0.1 miles\r\n\r\n                    <br></br>\r\n                    to SHADY GROVE METRO STATION\r\n                  </Typography>\r\n                  \r\n                </span>\r\n                  <hr></hr>\r\n\r\n                </Box>\r\n              </Paper> */}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Paper className={classes.paper}>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                View Map\r\n              </Button>\r\n              {/* <Box component=\"div\"> */}\r\n                  <MapContainer ></MapContainer>\r\n\r\n              {/* </Box> */}\r\n              </Paper>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </Container>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Route 2</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n            sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      \r\n      </Container>\r\n      <Footer/>\r\n    </Layout>\r\n  );\r\n}\r\n","F:\\Travel Villa\\travelvilla-frontend\\src\\theme.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\hoc\\Layout.js",["130"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport theme from \"../theme\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  checkAuthenticated,\r\n  load_user,\r\n  googleAuthenticate,\r\n} from \"../actions/auth\";\r\nimport queryString from \"query-string\";\r\n\r\nconst Layout = (props) => {\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const values = queryString.parse(location.search);\r\n    const state = values.state ? values.state : null;\r\n    const code = values.code ? values.code : null;\r\n\r\n    console.log(\"State: \" + state);\r\n    console.log(\"Code: \" + code);\r\n\r\n    if (state && code) {\r\n      props.googleAuthenticate(state, code);\r\n    } else {\r\n      props.checkAuthenticated();\r\n      props.load_user();\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {props.children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n  checkAuthenticated,\r\n  load_user,\r\n  googleAuthenticate,\r\n})(Layout);\r\n","F:\\Travel Villa\\travelvilla-frontend\\src\\actions\\auth.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\components\\AppBar\\AppBar.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\components\\Footer\\Footer.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\components\\MapContainer\\MapContainer.js",["131","132","133","134","135"],"import React,{useRef,useState,useEffect} from \"react\";\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\nimport {MapContainer, TileLayer, useMap} from 'react-leaflet';\r\nimport marker from '../../../node_modules/leaflet/dist/images/marker-icon.png';\r\nimport markerShadow from '../../../node_modules/leaflet/dist/images/marker-shadow.png';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst defaultIcon = new L.icon({\r\n  iconUrl: marker,\r\n  shadowUrl:markerShadow,\r\n  iconSize: [15, 25],\r\n  iconAnchor: [2, 1],\r\n  shadowAnchor: [2, 1],\r\n  shadowSize: [15, 24],\r\n  popupAnchor: [1, -2]\r\n});\r\n\r\n\r\nconst mapStyles = {\r\n    marginTop: '50px',\r\n    width: '500px',\r\n    padding:'30px',\r\n    height: '330px',\r\n};\r\n\r\n\r\n\r\nvar ATTRIBUTION='Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, ' +\r\n'<a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n'Imagery Â© <a href=\"http://mapbox.com\">Mapbox</a>' ;\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiamVhZnJlZXp5IiwiYSI6ImNrYmpicjczYjBucjIyeGxzNGRjNHMxejEifQ.bY_8hqCiG-LBMG1xXreqdA';\r\nconst URL= `https://api.mapbox.com/styles/v1/jeafreezy/ckorl31xc4b5m17o86qk3s26s/tiles/256/{z}/{x}/{y}@2x?access_token=${MAPBOX_TOKEN}`;\r\n\r\n\r\nconst MapActions = ()=>{\r\n\r\n  const map = useMap();\r\n  const history = useHistory();\r\n  const state = useSelector(state=>state.map);\r\n\r\n  useEffect(()=>{\r\n\r\n        \r\n        const {fromLatitude,fromLongitude,toLongitude,toLatitude} = state.trip;\r\n        const startLat=fromLatitude;\r\n        const startLong=fromLongitude;\r\n        const stopLat=toLatitude;\r\n        const stopLong=toLongitude;\r\n      // add the shortest route on the map\r\n      if(state.route.features.length < 1){\r\n\r\n        alert('No routes found')\r\n        history.goBack()\r\n\r\n      }else{\r\n\r\n          map.addLayer(new L.GeoJSON(state.route,{style:{color:'blue',stroke:3} ,onEachFeature(feature,layer){\r\n\r\n            const travelTime = feature.properties.travl_time;\r\n            const destination = feature.properties.destinatin;\r\n            const startingTime  = feature.properties.starting_t;\r\n            const endingTime  = feature.properties.ending_t;\r\n            const route = feature.properties.routes;\r\n            const distance = feature.properties.distance;\r\n\r\n            layer.bindTooltip(`<ul>\r\n            \r\n            <li>Travel Time: ${travelTime}</li>\r\n            <li>Distance: ${distance} KM</li>\r\n            <li>Next stop: ${destination}</li>\r\n            <li>Start Time: ${startingTime}</li>\r\n            <li>End Time: ${endingTime}</li>\r\n              <li>Route: ${route}</li>\r\n          \r\n        \r\n          \r\n          </ul>`).openTooltip()\r\n          \r\n        }}))\r\n\r\n        map.fitBounds(new L.GeoJSON(state.route).getBounds())\r\n\r\n        //add the starting and destination on the map\r\n\r\n        map.addLayer( new L.Marker([startLat,startLong],{icon:defaultIcon}).bindTooltip('Origin').openTooltip())\r\n        map.addLayer(new L.Marker([stopLat,stopLong],{icon:defaultIcon}).bindTooltip('Destination').openTooltip())\r\n\r\n      }},[]);\r\n\r\n  return null\r\n}\r\n\r\n\r\nconst MapView = ()=> {\r\n\r\n    const [position,setPosition] = useState([27.919006933098263,76.42596915364265]);\r\n    const ZOOM = 9;\r\n    \r\n    return (\r\n    \r\n\r\n      <MapContainer center={position} zoom={ZOOM} style={mapStyles}>\r\n\r\n        <TileLayer\r\n          attribution={ATTRIBUTION}\r\n          url={URL}\r\n        ></TileLayer>\r\n        <MapActions />\r\n\r\n      </MapContainer>\r\n      \r\n        \r\n      \r\n    );\r\n}\r\n\r\n\r\nexport default MapView;","F:\\Travel Villa\\travelvilla-frontend\\src\\views\\LandingPage\\ExploreSection\\ExploreSection.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\views\\LandingPage\\IdeasSection\\IdeasSection.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\components\\Header\\Header.js",["136","137","138"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport ButtonAppBar from '../../components/AppBar/AppBar';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {MenuItem} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {addTrip,removeRoute,removeTrip} from '../../actions/map';\r\n\r\nimport image from '../../assets/images/LandingPage/headerImg.jpg';\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      background: `url(${image}) `,\r\n      color: 'black',\r\n      height: 700,\r\n      backgroundRepeat: 'none',\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n      backgroundAttachment: 'fixed'\r\n    },\r\n    box:{\r\n        marginTop: '90px',\r\n        backgroundColor: 'rgba(39, 99, 42, 0.3)',\r\n        padding: '20px 30px',\r\n        width: '500px',\r\n        margin: 'auto'\r\n    },\r\n    form:{\r\n        backgroundColor: 'white',\r\n        padding: '20px'\r\n    },\r\n    formFields:{\r\n        width: '100%',\r\n        marginBottom: '20px',\r\n      \r\n    },\r\n    formBtn:{\r\n        borderRadius: '30px',\r\n        marginTop: '30px'\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nconst Header = () =>{\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const state  = useSelector(state=>state.map)\r\n    //using the dispatch\r\n\r\n    const dispatch = useDispatch();\r\n   \r\n\r\n    useEffect(()=>{\r\n        dispatch(removeTrip());\r\n        dispatch(removeRoute())\r\n    },[])\r\n\r\n\r\n    const cities = ['bahawalpur','faisalabad','gujranwala','lahore','multan','rawalpindi','Sialkot']\r\n\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n    const [selectedTime, setSelectedTime] =React.useState('');\r\n\r\n    const handleDateChange = (date) => {\r\n\r\n      setSelectedDate(date);\r\n\r\n    };\r\n\r\n    const handleTimeChange = (event) => {\r\n\r\n        setSelectedTime(event.target.value);\r\n  \r\n      };\r\n    \r\n    let [city, setCity] = React.useState('');\r\n    let [stops, setStops] = React.useState([]);\r\n    let [fromAddress, setFromAddress] = React.useState('');\r\n    let [toAddress, setToAddress] = React.useState('');\r\n\r\n    //Update city\r\n\r\n    const handleCityChange = (event) => {\r\n\r\n        let city = event.target.value;\r\n        setCity(city);\r\n\r\n        //pass city to the dynamic address\r\n        handleStops(city)\r\n       \r\n    };\r\n\r\n   const handleStops= city=>{\r\n\r\n        //fetch for city stops from assets\r\n        fetch(`../../stops/${city}.json`)\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            \r\n            const stops = data.features\r\n            setStops(stops)\r\n           \r\n        })\r\n        \r\n    }\r\n\r\n     \r\n    const handleSubmit=event=>{\r\n\r\n        event.preventDefault()\r\n\r\n        // Grab the user selections and update global state and send to API\r\n        const fromName = fromAddress.properties.name;\r\n        const fromLongitude  = fromAddress.geometry.coordinates[0];\r\n        const fromLatitude  = fromAddress.geometry.coordinates[1];\r\n        const fromID = fromAddress.properties.id;\r\n        const toName = toAddress.properties.name;\r\n        const toLongitude  = toAddress.geometry.coordinates[0];\r\n        const toLatitude  = toAddress.geometry.coordinates[1];\r\n        const toID = toAddress.properties.id;\r\n        const date = selectedDate;\r\n        const time = selectedTime;\r\n        const selectedCity = city;\r\n\r\n        const payload = {\r\n\r\n            'fromName':fromName,\r\n            'fromLongitude':fromLongitude,\r\n            'fromLatitude':fromLatitude,\r\n            'fromID':fromID,\r\n            'toName':toName,\r\n            'toLongitude':toLongitude,\r\n            'toLatitude':toLatitude,\r\n            'toID':toID,\r\n            'date':date,\r\n            'time':time,\r\n            'selectedCity':selectedCity\r\n        };\r\n\r\n        \r\n        //add the user selection to state\r\n\r\n         dispatch(addTrip(payload));\r\n\r\n         setTimeout(()=>{\r\n            history.push('/plan-my-journey');\r\n         },1000)\r\n       \r\n    }\r\n   \r\n\r\n    return(\r\n        <Box component=\"div\" className={classes.root}>\r\n           <ButtonAppBar color=\"primary\" backgroundColor=\"rgba(39, 99, 42, 0.3)\"></ButtonAppBar>\r\n           <Container maxWidth=\"lg\" >\r\n                <Box component=\"div\" className={classes.box}>\r\n                {/* onSubmit={(e) => updateCoordinates(e)} */}\r\n                <form  noValidate autoComplete=\"off\" className={classes.form} >\r\n\r\n                    {/* City selection */}\r\n                    \r\n\r\n                    <TextField\r\n                    select\r\n                    id=\"outlined-basic\"\r\n                    value={city}\r\n                    label='City'\r\n                    variant=\"outlined\" \r\n                    onChange={handleCityChange}\r\n                    className={classes.formFields}\r\n                    \r\n                    >{\r\n                        cities.map((city,id)=>{\r\n\r\n                           return <MenuItem value={city} key={id}>{city.toUpperCase()}</MenuItem>\r\n                        })\r\n                    }\r\n                   \r\n                    </TextField>\r\n\r\n\r\n                    {/* From Stops Selection */}\r\n\r\n                    <Autocomplete\r\n                        id=\"outlined-basic\"\r\n                        options={stops}\r\n                        getOptionLabel={option => option.properties.name.toUpperCase()}\r\n                        onChange={(event, value) => setFromAddress(value)}\r\n                        className={classes.formFields}\r\n                        renderInput={params => <TextField {...params} label=\"From\" variant=\"outlined\" />}\r\n                        \r\n                    />\r\n                       \r\n\r\n                    {/* To Stops Selection */}\r\n\r\n                    <Autocomplete\r\n                        id=\"outlined-basic\"\r\n                        options={stops}\r\n                        getOptionLabel={option => option.properties.name.toUpperCase()}\r\n                        onChange={(event, value) => setToAddress(value)}\r\n                        className={classes.formFields}\r\n                        renderInput={params => <TextField {...params} label=\"To\" variant=\"outlined\" />}\r\n                        \r\n                    />\r\n\r\n\r\n                      {/* Date & Time Picker */}\r\n\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <Grid container justify=\"space-around\">\r\n                            <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"      \r\n                            id=\"date-picker-inline\"\r\n                            label=\"Select Date\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                            />\r\n\r\n                           <TextField\r\n                                id=\"time\"\r\n                                label=\"Select Time\"\r\n                                type=\"time\"\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                                inputProps={{\r\n                                step: 300, // 5 min\r\n                                }}\r\n                                value={selectedTime}\r\n                                onChange={handleTimeChange}\r\n                            \r\n                                \r\n                            />\r\n\r\n                      \r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.formBtn} onClick={handleSubmit}\r\n                            disabled={\r\n                                \r\n                                selectedDate !== '' && selectedTime !== '' &&\r\n                                fromAddress !== '' && toAddress !== '' ? false : true\r\n                            }\r\n                            >\r\n                            Plan my Journey\r\n                            </Button>\r\n                        </Grid>\r\n                        \r\n                    </MuiPickersUtilsProvider>\r\n                    \r\n                </form>\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n        \r\n    );\r\n}\r\n\r\nexport default Header;","F:\\Travel Villa\\travelvilla-frontend\\src\\reducers\\index.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\actions\\types.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\actions\\map.js",[],"F:\\Travel Villa\\travelvilla-frontend\\src\\reducers\\auth.js",["139","140"],"import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  LOGOUT,\r\n  AUTHENTICATED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  GOOGLE_AUTH_SUCCESS,\r\n  GOOGLE_AUTH_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  access: localStorage.getItem(\"access\"),\r\n  refresh: localStorage.getItem(\"refresh\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n};\r\n\r\nexport default function auth(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh,\r\n      };\r\n    case USER_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOADED_FAIL:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case GOOGLE_AUTH_SUCCESS:\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh,\r\n      };\r\n\r\n    case GOOGLE_AUTH_FAIL:\r\n    case SIGNUP_FAIL:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        access: null,\r\n        refresh: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","F:\\Travel Villa\\travelvilla-frontend\\src\\reducers\\map.js",["141","142"],"import {ADD_TRIP_AND_ROUTE,REMOVE_TRIP,REMOVE_ROUTE} from '../actions/types';\r\n\r\nconst initialState = {\r\n    trip:JSON.parse(localStorage.getItem('trip')),\r\n    route:JSON.parse(localStorage.getItem('route'))\r\n}\r\n\r\nexport default function (state=initialState,action){\r\n\r\n  const { type, payload } = action;\r\n\r\n\r\n    switch(type){\r\n\r\n        case ADD_TRIP_AND_ROUTE:\r\n\r\n            localStorage.setItem('route',JSON.stringify(payload[0]))\r\n            localStorage.setItem('trip',JSON.stringify(payload[1]))\r\n\r\n            return {\r\n                ...state,\r\n                trip:payload[1],\r\n                route:payload[0]\r\n            };\r\n        \r\n        case REMOVE_ROUTE,REMOVE_TRIP:\r\n            \r\n        localStorage.removeItem('trip');\r\n        localStorage.removeItem('route');\r\n\r\n        return{\r\n            \r\n            ...state,\r\n            route:payload,\r\n            trip:payload\r\n        }\r\n        default:\r\n\r\n            return state\r\n    };\r\n\r\n}",["143","144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":11,"column":10,"nodeType":"151","messageId":"152","endLine":11,"endColumn":13},{"ruleId":"149","severity":1,"message":"153","line":11,"column":15,"nodeType":"151","messageId":"152","endLine":11,"endColumn":23},{"ruleId":"149","severity":1,"message":"154","line":15,"column":10,"nodeType":"151","messageId":"152","endLine":15,"endColumn":15},{"ruleId":"149","severity":1,"message":"154","line":15,"column":10,"nodeType":"151","messageId":"152","endLine":15,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":93,"column":35,"nodeType":"157","messageId":"158","endLine":93,"endColumn":37},{"ruleId":"159","severity":1,"message":"160","line":97,"column":23,"nodeType":"161","endLine":97,"endColumn":53},{"ruleId":"162","severity":1,"message":"163","line":112,"column":34,"nodeType":"161","messageId":"164","endLine":112,"endColumn":36},{"ruleId":"159","severity":1,"message":"165","line":31,"column":6,"nodeType":"166","endLine":31,"endColumn":16,"suggestions":"167"},{"ruleId":"149","severity":1,"message":"168","line":1,"column":15,"nodeType":"151","messageId":"152","endLine":1,"endColumn":21},{"ruleId":"149","severity":1,"message":"169","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":13},{"ruleId":"149","severity":1,"message":"170","line":8,"column":21,"nodeType":"151","messageId":"152","endLine":8,"endColumn":32},{"ruleId":"159","severity":1,"message":"171","line":92,"column":10,"nodeType":"166","endLine":92,"endColumn":12,"suggestions":"172"},{"ruleId":"149","severity":1,"message":"173","line":100,"column":21,"nodeType":"151","messageId":"152","endLine":100,"endColumn":32},{"ruleId":"149","severity":1,"message":"174","line":21,"column":10,"nodeType":"151","messageId":"152","endLine":21,"endColumn":14},{"ruleId":"149","severity":1,"message":"175","line":66,"column":11,"nodeType":"151","messageId":"152","endLine":66,"endColumn":16},{"ruleId":"159","severity":1,"message":"176","line":75,"column":7,"nodeType":"166","endLine":75,"endColumn":9,"suggestions":"177"},{"ruleId":"149","severity":1,"message":"178","line":11,"column":3,"nodeType":"151","messageId":"152","endLine":11,"endColumn":21},{"ruleId":"149","severity":1,"message":"179","line":12,"column":3,"nodeType":"151","messageId":"152","endLine":12,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":8,"column":1,"nodeType":"182","endLine":42,"endColumn":2},{"ruleId":"183","severity":1,"message":"184","line":26,"column":26,"nodeType":"185","messageId":"186","endLine":26,"endColumn":27},{"ruleId":"145","replacedBy":"187"},{"ruleId":"147","replacedBy":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'fab' is defined but never used.","Identifier","unusedVar","'faGoogle' is defined but never used.","'theme' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Assignments to the 'totalTime' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["191"],"'useRef' is defined but never used.","'axios' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'map', 'state.route', and 'state.trip'. Either include them or remove the dependency array.",["192"],"'setPosition' is assigned a value but never used.","'Link' is defined but never used.","'state' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["193"],"'ACTIVATION_SUCCESS' is defined but never used.","'ACTIVATION_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["189"],["190"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [location, props]",{"range":"200","text":"201"},"Update the dependencies array to be: [history, map, state.route, state.trip]",{"range":"202","text":"203"},"Update the dependencies array to be: [dispatch]",{"range":"204","text":"205"},[903,913],"[location, props]",[3148,3150],"[history, map, state.route, state.trip]",[1953,1955],"[dispatch]"]